<div class="pageBlock">
  <div class="pageContentBlockUpper">
    <div class="normalTitleBlack margins"><p style="margin: 0px;">Getting started</p></div>

    <p class="normalText margins">Geocoding is the process of finding associated geographic coordinates (often expressed as latitude and longitude) from other geographic data, such as street addresses, or ZIP codes (postal codes). With geographic coordinates the features can be mapped and entered into Geographic Information Systems, or the coordinates can be embedded into media such as digital photographs via geotagging. A geocoder is a piece of software or a (web) service that helps in this process. These steps include parsing the address, standardizing abbreviated values, assigning each address element to a category known as a match key, indexing the needed categories, searching the reference data, assigning a score to each potential candidate, filtering the list of candidates based on the minimum match score, and delivering the best match. Other means of geocoding might include locating a point at the centroid (center) of a land parcel, if parcel (property) data is available in the geographic information system database.
      <br/><br/>
      Reverse geocoding is the opposite: finding an associated textual location such as a street address, from geographic coordinates.
      <br/><br/>
      Our Geocoder API is designed as an alternative to expensive "off the shelf" geocoding softwares and APIs. Results of the API can be used on any kind of map ranging from Google maps to user's own custom mapping systems. The geocoder can be used both for geocoding and reverse geocoding. We tried to make it easy to use and understand. Our approach was to make it in such manner that user doesn't need to know much about geocoding and yet to get the results he needs.
    </p>

    <div class="normalTitleBlack margins"><p style="margin: 0px;">API</p></div>

    <p class="normalText margins" style="margin-bottom: 0px;">
      All results are in Well-Known Text form. Read more <a href="http://en.wikipedia.org/wiki/Well-known_text">here</a>.
      <br/>
      <br/>
      Parameters:
      <ul class="normalText margins" style="margin-top: 0px;">
        <li>
          query - Input query, e.g. 3514 SE 317th Ave Troutdale OR 97060 Multnomah
        </li>
        <li>
          format - Return format [XML|JSON] (optional, default it XML)
        </li>
        <li>
          viewbox - Viewbox of map top,bottom,left,right (optional)
        </li>
        <li>
          bounded - Limit results to viewbox [1|0] (optional, default is 0)
        </li>
        <li>
          limit - Limit number of results [1..20] (optional, default is 5)
        </li>
        <li>
          details - Print detailed composition of each result [1|0] (optional, default is 0)
        </li>
        <li>
          geometry - Return geometry as WKT [1|0] (optional, default is 0)
        </li>
        <li>
          point - Return point as WKT [1|0] (optional, default is 1)
        </li>
        <li>
          boundingBox - Return the bounding box [1|0] (optional, default is 0)
        </li>
      </ul>
      <p class="normalText margins">
      <ul class="normalText margins">
        Result types:
        <li>
          country
        </li>
        <li>
          state
        </li>
        <li>
          county
        </li>
        <li>
          usps
        </li>
        <li>
          place
        </li>
        <li>
          road
        </li>
        <li>
          address
        </li>
        <li>
          postalcode
        </li>
      </ul>
      </p>
    </p>

    <div class="normalTitleBlack margins"><p style="margin: 0px;">Suggest</p></div>
    <p class="normalText margins">
      Service: http://geocoder.socialexplorer.com/suggest
      <br/>
      <br/>
      The suggest service takes input data and if there is a match, returns the exact result, if not it returns an empty string. This service is used as a suggestion tool - while typing the desired query it automatically gives possible results based on what the user has typed in so far. This service cannot detect any possible mistakes in the input string, since it does not use any algorithm, it just compares the input with data in the database.
      The ID attribute of the result object is used by geocoder service.
    </p>

    <div class="margins" style="margin-bottom: 20px;">
      <p class="normalSubtitleBlack">Example</p>
    <p class="exampleInput margins">
      <table style="width: 100%;">
        <tr style="width: 100%;">
          <td>
            <%= text_field_tag(:suggest_example1, 'http://geocoder.socialexplorer.com/suggest?limit=5&format=xml&details=0&bounded=0&viewbox=40.944704,40.941397,-73.843510,-73.84024&point=1&geometry=0&query=50 Merriam Ave', :class => "exampleInputTxt", :onKeyDown => "geocoderService('suggest_example1', 'suggest_results1', 'suggest')") %>
          </td>
          <td style="width: 110px; padding-left: 10px;">
            <%= tag "input", { "type" => "button", "value" => "Try it!", "onclick" => "geocoderService('suggest_example1', 'suggest_results1', 'suggest')", "class" => "seButton" } %>
          </td>
        </tr>
      </table>
    </p>

    <pre class="codeListing margins" id="suggest_results1">
&lt;results query="50 Merriam Ave" time="2012/12/28 11:32:30">
  &lt;result score="1.5" within_viewbox="true" type="address" id="address_5656261_50">50 Merriam Ave, Bronxville, NY, United States 10708</result>
  &lt;result score="0.75" within_viewbox="false" type="address" id="address_5722387_50">50 Merriam Ave, Bronx, NY, United States 10452</result>
  &lt;result score="0.75" within_viewbox="false" type="address" id="address_4498237_50">50 Merriam Ave, Newton, NJ, United States 07860</result>
  &lt;result score="0.75" within_viewbox="false" type="address" id="address_3983822_50">50 Merriam Ave, Bloomfield, CT, United States 06002</result>
  &lt;result score="0.75" within_viewbox="false" type="address" id="address_6090894_50">50 Merriam Ave, Shrewsbury, MA, United States 01545</result>
&lt;/results>
    </pre>
    </div>

    <div class="normalTitleBlack margins"><p style="margin: 0px;">Search</p></div>
    <p class="normalText margins">
      Service: http://geocoder.socialexplorer.com/search
      <br/>
      <br/>
      Search is the main service which takes input data and according to it gives back the results of a query. The search service uses an algorithm which checks the input string and returns the most possible result even if the input query is not precise. This service uses fuzzy logic to determine the wanted result.
      The ID attribute of the result object is used by geocoder service.
    </p>

    <div class="margins" style="margin-bottom: 20px;">
    <p class="normalSubtitleBlack">Example</p>
    <p class="exampleInput">
      <table style="width: 100%;">
        <tr style="width: 100%;">
          <td>
            <%= text_field_tag(:search_example1, 'http://geocoder.socialexplorer.com/search?format=xml&details=0&bounded=0&limit=20&viewbox=40.944704,40.941397,-73.843510,-73.84024&point=0&geometry=0&query=50 Merriam Ave Bronxville NY', :class => "exampleInputTxt", :onKeyDown => "geocoderService('search_example1', 'search_results1', 'search')") %>
          </td>
          <td style="width: 110px; padding-left: 10px;">
            <%= tag "input", { "type" => "button", "value" => "Try it!", "onclick" => "geocoderService('search_example1', 'search_results1', 'search')", "class" => "seButton" } %>
          </td>
        </tr>
      </table>
    </p>

    <pre class="codeListing" id="search_results1">
&lt;results query="50 Merriam Ave Bronxville NY" time="2012/12/28 11:29:31">
  &lt;result score="6.8" within_viewbox="true" type="address" id="address_5656261_50">50 Merriam Ave, Bronxville, NY, United States 10708</result>
  &lt;result score="4.3" within_viewbox="true" type="address" id="address_5656262_50">50 Merriam Pl, Bronxville, NY, United States 10708</result>
  &lt;result score="1.88" within_viewbox="false" type="place" id="place_3608532">Bronxville, NY, United States</result>
  &lt;result score="1.6" within_viewbox="false" type="place" id="place_3646668">Merrick, NY, United States</result>
  &lt;result score="1.6" within_viewbox="false" type="place" id="place_3646750">Merritt Park, NY, United States</result>
&lt;/results>
    </pre>
    </div>


    <div class="normalTitleBlack margins"><p style="margin: 0px;">Geocoder</p></div>
    <p class="normalText margins">
      Service: http://geocoder.socialexplorer.com/geocode
      <br/>
      <br/>
      For geocoding we use the ID supplied by the search or suggest service.
    </p>

    <div class="margins">
      <p class="normalSubtitleBlack">Example</p>
    <p class="exampleInput">
      <table style="width: 100%;">
        <tr style="width: 100%;">
          <td>
            <%= text_field_tag(:geocoder_example1, 'http://geocoder.socialexplorer.com/geocode?format=xml&details=1&point=1&geometry=1&query=address_5656261_50', :class => "exampleInputTxt", :onKeyDown => "geocoderService('geocoder_example1', 'geocoder_results1', 'geocode')") %>
          </td>
          <td style="width: 110px; padding-left: 10px;">
            <%= tag "input", { "type" => "button", "value" => "Try it!", "onclick" => "geocoderService('geocoder_example1', 'geocoder_results1', 'geocode')", "class" => "seButton" } %>
          </td>
        </tr>
      </table>
    </p>

    <pre class="codeListing" id="geocoder_results1">
&lt;results query='address_5656261_50' time='2013/02/08 08:42:39'&gt;
    &lt;result score='0' type='address' id='address_5656261_50' geometry='LINESTRING (-73.840865 40.941682, -73.841443 40.944115)' point='POINT (-73.84156676358391 40.94271492253961)'&gt;
      50 Merriam Ave, Bronxville, NY, United States 10708
      &lt;details&gt;
        &lt;road&gt;
          Merriam Ave
        &lt;/road&gt;
        &lt;usps&gt;
          Bronxville
        &lt;/usps&gt;
        &lt;state&gt;
          NY
        &lt;/state&gt;
        &lt;country&gt;
          United States
        &lt;/country&gt;
        &lt;postalcode&gt;
          10708
        &lt;/postalcode&gt;
        &lt;house_number&gt;
          50
        &lt;/house_number&gt;
      &lt;/details&gt;
    &lt;/result&gt;
&lt;/results&gt;
    </pre>
    </div>
  </div>
</div>